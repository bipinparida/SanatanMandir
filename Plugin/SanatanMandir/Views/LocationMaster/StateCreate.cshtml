@using System.Collections;
@using Newtonsoft.Json;

@model CloudVOffice.Data.DTO.LocationMaster.StateDTO;

@{
    Layout = "_MainAppLayout";
    ViewData["Title"] = "State";
}
@addTagHelper *, Syncfusion.EJ2
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<header class="main-heading">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
                <div class="page-icon">
                    <i class="icon-laptop_windows"></i>
                </div>
                <div class="page-title">
                    <h5>SanatanMandir Dashboard</h5>
                    <h6 class="sub-heading">Welcome to POS Admin</h6>
                </div>
            </div>
            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
                <div class="right-actions">
                    <span class="last-login"></span>
                </div>
            </div>
        </div>
    </div>
</header>
<div class="main-content">
    <div class="row gutters">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
            <div class="card">
                <form asp-route="SanatanMandir/State/StateCreate" method="post" autocomplete="off">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-10">
                                <b>State Create</b>
                            </div>
                            <div class="col-md-2 ">
                                <a href="/SanatanMandir/State/StateView" class="btn btn-primary btn-sm float-right"><i class="icon-list2"></i> List</a>
                            </div>
                        </div>

                    </div>
                    <div class="card-body">
                        <div class="form-row">
                            <div class="form-group col-md-3">

                                <input asp-for="@Model.StateId" type="hidden" />

                                <label for="CountryId" class="form-label">Country Name</label>
                                <ejs-dropdownlist id="CountryId" allowFiltering="true" ejs-for="@Model.CountryId" filtering="onCountryNamefiltering" dataSource="@(new SelectList((IEnumerable)ViewBag.Country, "CountryId", "CountryName").Items)" placeholder="Select Country" popupHeight="220px">
                                    <e-dropdownlist-fields text="CountryName" value="CountryId"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                                <span asp-validation-for="CountryId"></span>
                            </div>

                            <div class="form-group col-md-3">

                                <label for="StateName" class="form-label">State Name</label>
                                <input asp-for="@Model.StateName" type="text" class="form-control text-uppercase" autofocus="autofocus" placeholder="State Name" />
                                <span asp-validation-for="StateName"></span>
                            </div>


                        </div>
                        <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    </div>
                    <div class="card-body">
                        <div class="col-lg-2 col-md-2 col-sm-12">
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>
<script>
    function onCountryNamefiltering(e) {
        var query = new ej.data.Query();
        query = (e.text !== '') ? query.where('CountryName', 'startswith', e.text, true) : query;
        e.updateData(@Html.Raw(JsonConvert.SerializeObject(ViewBag.Country)), query);
    }
</script>
